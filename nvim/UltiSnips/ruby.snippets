global !p
from ultisnips_helpers import *
endglobal

# == Definitions ===============================================================
snippet #! "shebang"
#!/usr/bin/env ruby
endsnippet

snippet req "require" b
require '$1'
endsnippet

snippet inc "include"
include ${1:Module}
endsnippet

snippet gem "gem"
gem '${1}'
endsnippet

snippet cl "class definition"
class ${1:Name}
	${0:${VISUAL}}
end
endsnippet

snippet mod "module definition"
module ${1:Name}
	${0:${VISUAL}}
end
endsnippet

snippet miss "method missing"
def method_missing(meth, *args, &block)
	if meth.to_s =~ /$1/
		$2
	else
		super
	end
end
endsnippet

snippet @ "instance_variable" i
@${1} = $1
endsnippet

snippet def "def"
def ${1:function_name}${2:(${3:*args})}
	${0:${VISUAL}}
end
endsnippet

snippet d "def"
def ${1:function_name}
	${0:${VISUAL}}
end
endsnippet

snippet di "def initialize"
def initialize${1:(${2:*args})}
	${0:${VISUAL}}
end
endsnippet

# == Methods ==================================================================
snippet - "lambda (->)"
->${1:(${2:i})} { ${3:${VISUAL}} }
endsnippet

snippet times "times" i
times { |${1:i}| $2 }
endsnippet

snippet reduce "reduce" i
reduce { |${1:i}| $2 }
endsnippet

snippet map "map" i
map { |${1:i}| $2 }
endsnippet

snippet tap "tap" i
tap { |o| o.${1:inspect} }
endsnippet

# == Comments ==================================================================
snippet -- "Line comment"
# -- [[ ${1} ]] ----------------------------------------------------------------
endsnippet

snippet == "Thick line comment"
# == [[ ${1} ]] ================================================================
endsnippet

snippet # "#{}" i
#{$1}
endsnippet

# == Debugging =================================================================
snippet pry "binding.pry" b
require 'pry'; binding.pry
endsnippet

snippet m> "color debug" i
m---------> $1 : #{${2:$1}.inspect}
endsnippet

snippet m-- "color line debug" i
m-- [[ ${1} ]] ----------------------------------------------------------------
endsnippet

snippet red "red debug"
puts "\e[31m$1\e[0m"
endsnippet

snippet gr "green debug"
puts "\e[32m$1\e[0m"
endsnippet

snippet yel "yellow debug"
puts "\e[33m$1\e[0m"
endsnippet

snippet blue "blue debug"
puts "\e[34m$1\e[0m"
endsnippet

snippet pink "pink debug"
puts "\e[35m$1\e[0m"
endsnippet

snippet cyan "cyan debug"
puts "\e[36m$1\e[0m"
endsnippet
