#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#
#
# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Source for get-short-path
if [[ -s "${ZDOTDIR:-$HOME}/.zsh/get-short-path.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zsh/get-short-path.zsh"
fi

# Source for git
if [[ -s "${ZDOTDIR:-$HOME}/.zsh/git.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zsh/git.zsh"
fi

#. /home/smockey/git/powerline/powerline/bindings/zsh/powerline.zsh

export PATH=$PATH:/usr/lib/lightdm/lightdm:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
export PATH=$PATH:/home/smockey/bin:.:/home/smockey/scripts
export PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting
export PATH=$PATH:/usr/local/heroku/bin

export GTK_IM_MODULE=xim
export GEDITOR=gvim
export EDITOR=vim
export TERM="xterm-256color"
stty -ixon

alias apt-get="sudo apt-get"
alias dpkg="sudo dpkg"
alias dpkg-reconfigure="sudo dpkg-reconfigure"

alias gosubb="cd /home/smockey/projects/gosubb"

alias vi="vim"
alias vimrc="vim ~/.vimrc"
alias zshrc="vim ~/.zshrc"
alias preztorc="vim ~/.zpreztorc"
alias todo="cat ~/.todo 2>/dev/null"
alias vitodo="vi ~/todo.md"
alias vir="vi -R"

alias au="apt-get update"
alias auu="apt-get upgrade"
alias adu="apt-get dist-upgrade"
alias ai="apt-get install"
alias as="apt-cache search"
alias ar="apt-get remove"
alias aar="apt-get autoremove"

alias yi="sudo yum install"
alias yli="sudo yum localinstall"
alias yu="sudo yum upgrade"
alias yr="sudo yum remove"
alias ys="yum search"
alias yh="sudo yum history"

alias pa="pacman"

alias ccat="pygmentize -g"
alias tree="tree -C"
alias less="less -r"
alias wee="weechat-curses"
alias a="atool"
alias atx="atool -x"
alias g="git"
alias gcd='cd $(git-root)'
alias vip="vim -MR -"

# Custom bindings
bindkey '^[[1;5D' emacs-backward-word
bindkey '^[[1;5C' emacs-forward-word

function alert {
    RVAL=$?
    zmodload zsh/parameter
    LAST=$history[$HISTCMD]
    DATE=`date`
    [[ -n $1 ]] && TIMEOUT=$1 || TIMEOUT=0

    # set window title so we can get back to it
    echo -ne "\e]2;$LAST\a"

    if [[ $RVAL == 0 ]]; then
        RVAL="SUCCESS"
        BG_COLOR="#859900"
    else
        RVAL="FAILURE"
        BG_COLOR="#dc322f"
    fi

    MESSAGE="naughty.notify({ \
            title = \"Command completed on: \t$DATE\", \
            text = \"$ $LAST\" .. newline .. \"$RVAL\", \
            timeout = $TIMEOUT, \
            bg = \"$BG_COLOR\", \
            fg = \"#eee8d5\", \
            margin = 8, \
            run = function () run_or_raise(nill, { name = \"$LAST\" }) end
            })"
    echo $MESSAGE | awesome-client -
}

function _update_ps1()
{
  export PROMPT="$(~/.zsh/powerline-zsh.py $1 $2 $3)"
}
preexec()
{
  export CMD=$1
  echo -n "\n"
}

precmd()
{
  # We pass last commannd as well as running jobs
  _update_ps1 $? $CMD "$(jobs -l 2>/dev/null)"
}
